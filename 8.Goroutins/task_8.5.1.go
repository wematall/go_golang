package main
import "fmt"

// Загрузчик
// Вы создаете программу для загрузки файлов.
// Чтобы ускорить загрузку, вы решили использовать многопоточность. 
// Каждая загрузка файла будет выполняться как отдельная горутина.

// Для имитации загрузки файла функция download() 
// должна принимать в качестве аргумента целое число 
// (которое будет играть роль размера файла) 
// и подсчитывать сумму всех целых чисел от 0 до этого числа (включительно).

// Данная программа принимает три размера файлов 
// в качестве входных данных и вызывает функцию download() как горутину для каждого файла.
// Завершите программу, объявив функции download() 
// и отправив результат их работы в main() с помощью каналов. 
// Результаты работы трех функций должны быть сложены и выведены на экран.

//определите функцию download()
func download(a int, ch chan int) {
    sum := 0
    for i:=1; i <= a; i++ {
        sum += i
    }
    ch <- sum
}

func main() {
    ch1 := make(chan int)
    ch2 := make(chan int)
    ch3 := make(chan int)

    var s1, s2, s3 int
    fmt.Scanln(&s1)
    fmt.Scanln(&s2)
    fmt.Scanln(&s3)

    go download(s1, ch1)
    go download(s2, ch2)
    go download(s3, ch3)

    //выведите сумму всех результатов
    a := <- ch1
    b := <- ch2
    c := <- ch3
    fmt.Println(a + b + c)
}